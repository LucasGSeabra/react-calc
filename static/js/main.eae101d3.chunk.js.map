{"version":3,"sources":["components/Button/index.jsx","components/Display/index.jsx","utils/Operate/Operate.jsx","main/Calc.jsx","App.js","index.js"],"names":["Button","props","classes","operation","double","triple","onClick","e","click","label","className","Display","value","Operate","val1","val2","op","r","v1","parseFloat","v2","Calc","useState","display","setDisplay","clearDisplay","setClearDisplay","setOperation","values","setValues","current","setCurrent","operate","n","equals","currentOperation","val","type","includes","displayValue","i","newValue","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eae101d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css';\r\n\r\nfunction Button(props) {\r\n    let classes = 'button ';\r\n    classes += props.operation ? 'operation' : '';\r\n    classes += props.double ? 'double' : '';\r\n    classes += props.triple ? 'triple' : ''\r\n\r\n    return (\r\n        <button \r\n            onClick={ e => props.click && props.click(props.label) }\r\n            className={classes}\r\n        >\r\n            {props.label}    \r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './styles.css';\r\n\r\nfunction Display(props) {\r\n    return(\r\n        <div className=\"display\">\r\n            {props.value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","function Operate(val1, val2, op) {\r\n    let r = 0;\r\n    let v1 = parseFloat(val1);\r\n    let v2 = parseFloat(val2);\r\n    switch(op) {\r\n\r\n        case '+':\r\n            r = v1 + v2;\r\n        break;\r\n\r\n        case '-':\r\n            r = v1 - v2;\r\n        break;\r\n\r\n        case '*':\r\n            r = v1 * v2;\r\n        break;\r\n\r\n        case '/':\r\n            r = v1 / v2;\r\n        break;\r\n    \r\n        default:\r\n            r = v1;\r\n    }\r\n    \r\n    return r;\r\n}\r\n\r\nexport default Operate","import React, { useState } from 'react';\r\nimport Button from '../components/Button';\r\nimport Display from '../components/Display';\r\nimport Operate from '../utils/Operate/Operate';\r\n\r\nimport './styles.css';\r\n\r\nfunction Calc() {\r\n\r\n    const [display, setDisplay] = useState('0');\r\n    const [clearDisplay, setClearDisplay] = useState(false);\r\n    const [operation, setOperation] = useState('');\r\n    const [values, setValues] = useState([0, 0]);\r\n    const [current, setCurrent] = useState(0);\r\n\r\n    function clearMemory() {\r\n        setDisplay('0');\r\n        setClearDisplay(false);\r\n        setOperation('');\r\n        setValues([0, 0]);\r\n        setCurrent(0);\r\n    }\r\n\r\n    function operate(n) {\r\n        if(current === 0) {\r\n            setCurrent(1);\r\n            setClearDisplay(true);\r\n            setOperation(n);\r\n        } else {\r\n            const equals = operation === '=';\r\n            const currentOperation = operation;\r\n\r\n            let val = [...values];\r\n            try {\r\n                val[0] = Operate(val[0], val[1], currentOperation);               \r\n            } catch {\r\n                val[0] = values[0];\r\n                \r\n            }\r\n            val[1] = 0;\r\n\r\n            setDisplay(val[0]);\r\n            setOperation( equals ? null : operation);\r\n            setCurrent(equals ? 0 : 1);\r\n            setClearDisplay(!equals);\r\n            setValues([...val]);\r\n        }\r\n    }\r\n\r\n    function type(n) {\r\n        const dot = display;\r\n        if(n === '.' && dot.includes('.')) {\r\n            return\r\n        }\r\n        const clear = display === '0'\r\n            || clearDisplay;        \r\n        const currentValue = clear ? '' : display;\r\n        const displayValue = currentValue + n;\r\n        setDisplay(displayValue);\r\n        setClearDisplay(false);\r\n\r\n        if (n !== '.') {\r\n            const i = current;\r\n            const newValue = parseFloat(displayValue);\r\n            let val = [...values];\r\n            val[i] = newValue;\r\n           setValues([...val]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calc\">\r\n            <Display value={display} />\r\n            <Button label=\"AC\" click={clearMemory} triple/>\r\n            <Button label=\"/\" click={operate} operation/>\r\n            <Button label=\"7\" click={type}/>\r\n            <Button label=\"8\" click={type}/>\r\n            <Button label=\"9\" click={type}/>\r\n            <Button label=\"*\" click={operate} operation/>\r\n            <Button label=\"4\" click={type}/>\r\n            <Button label=\"5\" click={type}/>\r\n            <Button label=\"6\" click={type}/>\r\n            <Button label=\"-\" click={operate} operation/>\r\n            <Button label=\"1\" click={type}/>\r\n            <Button label=\"2\" click={type}/>\r\n            <Button label=\"3\" click={type}/>\r\n            <Button label=\"+\" click={operate} operation/>\r\n            <Button label=\"0\" click={type} double/>\r\n            <Button label=\".\" click={type}/>\r\n            <Button label=\"=\" click={operate} operation/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calc\r\n","import React from 'react';\r\nimport Calc from './main/Calc';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Calculadora</h1>\r\n      <Calc />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}